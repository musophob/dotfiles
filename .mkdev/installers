#!/usr/bin/env bash

# Ask for the administrator password upfront
sudo -v

# Keep-alive: update existing `sudo` time stamp until finished
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

# install command line tools
xcode-select --install

# set up git cred caching
# git config --global credential.helper osxkeychain

# define app arrays

brew_taps=(
  'PX4/homebrew-px4'
  'osx-cross/avr'
  'rockyluke/devops'
  'thoughtbot/formulae'
  'clintmod/formulas'
  'crisidev/homebrew-chunkwm'
)

user_brews=(
  ack
  apple-gcc42
  avr-gcc
  avrdude
  bash
  'bradp/vv/vv'
  cheat
  chunkwm
  cmake
  cmatrix
  cmus
  composer
  coreutils
  cowsay
  ctags
  dfu-programmer
  dnsmasq
  exiftool
  feh
  ffmpeg
  figlet
  findutils
  fortune
  fswatch
  fzf
  gcc-arm-none-eabi
  gifsicle
  git
  gitlint
  gitsh
  go
  grep
  gtypist
  gpg
  hadolint
  httrack
  hub
  imagemagick
  'koekeishiya/formulae/khd'
  mackup
  macprefs
  mercurial
  mplayer
  mysql
  neofetch
  neovim
  ngrep
  nmap
  node
  pianobar
  postgresql
  python
  python3
  rbenv
  rename
  ripgrep
  rsync
  ruby-build
  selecta
  shellcheck
  sloccount
  speedtest_cli
  spidermonkey
  ssh-copy-id
  tasksh
  teensy_loader_cli
  tidy-html5
  timewarrior
  tmux
  tmuxinator-completion
  tokei
  tor
  trash
  tree
  vim
  watch
  wget
  wp-cli
  youtube-dl
  zsh
  zsh-completions
)

qlexts=(
  betterzipql
  qlcolorcode
  qlimagesize
  qlmarkdown
  qlprettypatch
  qlstephen
  quicklook-csv
  quicklook-json
  suspicious-package
  webpquicklook
)

npm_packages=(
  bower
  commit-msg
  css-loader
  csslint
  ember-cli
  ember-template-lint
  eslint
  extract-loader
  fb-messenger-cli
  file-loader
  generator-assemble
  generator-reveal
  generator-webapp
  grunt-cli
  gulp
  http-server
  js-yaml
  jshint
  lighthouse
  live-server
  livedown
  node-sass
  puppeteer
  purify-css
  phantomjs-prebuilt
  sass-lint
  sass-loader
  sloc
  spot
  standard
  stylelint
  stylelint-scss
  stylelint-config-recommended
  stylelint-config-recommended-scss
  stylelint-config-standard
  surge
  swaglint
  tern
  'webpack-dev-server@2'
  'webpack@3'
  write-good
  yarn
  yo
)

pip_packages=(
  bitbucket-cli
  jedi
  python-dateutil
  pylint
  requests
  sass-lint
  terminal_velocity
  vim-vint
  taskwarrior-inthe.am
)

pip3_packages=(
  proselint
  mps-youtube
  neovim
  tasklib
)

user_apps=(
  1password
  bartender
  carbon-copy-cloner
  coconutbattery
  cool-retro-term
  cyberduck
  docker
  firefox
  flash-npapi
  gifrocket
  google-chrome
  google-chrome-canary
  google-backup-and-sync
  iexplorer
  imageoptim
  iterm2
  java
  karabiner-elements
  keyboard-maestro
  keycastr
  mac2imgur
  nosleep
  qutebrowser
  slack
  spectacle
  sublime-text
  teamviewer
  textexpander
  torbrowser
  tunnelbear
  vagrant
  virtualbox
  vlc
)

user_fonts=(
  font-anonymous-pro
  font-source-code-pro
  font-source-code-pro-for-powerline
  font-source-sans-pro
  font-source-serif-pro
  font-spacemono-nerd-font
  font-hack-nerd-font
)


# Check for Homebrew,
# Install if we don't have it
if test ! $(which brew); then
  echo "Installing homebrew..."
  ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
fi

echo "Setting up homebrew..."
brew doctor
brew update

for tap in "${brew_taps[@]}"; do
    brew tap $tap
done

echo "Installing user brews..."
for formula in "${user_brews[@]}"; do
    brew install $formula
done

# update pip stuff for the newly installed python
echo "Updating pip..."
pip install --upgrade setuptools
pip install --upgrade pip
easy_install iso8601

# install python packages
echo "Installing pip packages..."
pip install "${pip_packages[@]}"
echo "Installing pip3 packages..."
pip3 install "${pip3_packages[@]}"

# install composer packages
composer global require "asm89/twig-lint" "@stable" # dep of SublimeLinter-twig

# install npm packages
echo "Installing npm packages..."
npm install -g "${npm_packages[@]}"

# install the cask
brew tap caskroom/cask

# install user_apps
echo "Installing apps..."
for formula in "${user_apps[@]}"; do
    brew cask install $formula
done

# add `subl` command
ln -s "/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl" /usr/local/bin/subl

# install Prey with API key prompt
read -p "Set up Prey https://panel.preyproject.com/settings/user-profile:" prey_api_key

# echo "installing quicklook extensions..."
brew cask install "${qlexts[@]}"

# echo "pulling the font cask..."
brew tap caskroom/fonts

# # install fonts
echo "installing fonts..."
brew cask install "${user_fonts[@]}"
