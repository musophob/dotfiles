# TODO

# # list file size of all dirs inside a given dir
# in bash: dushs() for i in $1/*; do du -sh $i; done
# make argument optional, default to current dir with ./

# # match filenames containing given string and move into a new dir of that name
# mvm() { mkdir ./mvmtemp; mv ./*"$@"* ./mvmtemp; mv ./mvmtemp ./"$@" }

# # remove matched files recursively
# rmvm() for pattern in $@; do find . -type f -name "$pattern" -exec rm -r {} \ ; done
# # remove unmatched files recursively
# rmvm!() for pattern in $@; do find . -type f ! \( -name "$pattern" \) -exec rm -r {} \ ; done

# # greps
# alias gimg="grep -i '\.png|\.gif|\.jpg|\.jpeg|\.ico|\.tiff'"
# alias gvid="grep -i '\.avi|\.mov|\.mpg|\.wmv|\.mp4|\.m4v'"
# alias gaud="grep -i '\.aiff|\.aac|\.alac|\.flac|\.mp3|\.m4a'"
# alias gtxt="grep -i '\.txt|\.md|\.mdown|\.markdown|\.textile'"
# alias gdoc="grep -i '\.doc|\.docx|\.pdf|\.pages|\.rtf|\.ppt|\.pptx|\.xls|\.xlsx'|\.csv|\.tsv"
# alias gcode="grep -i '\.html|\.css|\.js|\.rb|\.py|\.xml|\.bash|\.sh|\.sass|\.scss|\.less|\.coffee|\.php|\.json|\.erb|\.haml|\.slim'"
# alias gfont="grep -i '\.eot|\.ttf|\.woff|\.svg'"


# # unzip all to self-titled dirs
# uza() for f in ./*.zip; do unzip ${f%.zip}; done
# # unzip all to self-titled dirs, then remove .zip's
# uzar() for f in ./*.zip; do unzip ${f%.zip}; rm -rf ${f}; done
# # extract (almost) anything
# extract() {
#   if [ -f $1 ] ; then
#      case $1 in
#         *.tar.bz2)
#             tar xvjf $1
#             ;;
#         *.tar.gz)
#             tar xvzf $1
#             ;;
#         *.bz2)
#             bunzip2 $1
#             ;;
#         *.rar)
#             unrar x $1
#             ;;
#         *.gz)
#             gunzip $1
#             ;;
#         *.tar)
#             tar xvf $1
#             ;;
#         *.tbz2)
#             tar xvjf $1
#             ;;
#         *.tgz)
#             tar xvzf $1
#             ;;
#         *.zip)
#             unzip $1
#             ;;
#         *.Z)
#             uncompress $1
#             ;;
#         *.7z)
#             7z x $1
#             ;;
#         *)
#             echo "'$1' cannot be extracted via extract"
#             ;;
#     esac
#   else
#       echo "'$1' is not a valid file"
#   fi
# }


# # rsync
# _rsync_cmd='rsync --verbose --progress --human-readable --compress --archive --hard-links --one-file-system'
# if grep -q 'xattrs' <(rsync --help 2>&1); then
#   _rsync_cmd="${_rsync_cmd} --acls --xattrs"
# fi

# # Mac OS X and HFS+ Enhancements
# # http://help.bombich.com/kb/overview/credits#opensource
# if [[ "$OSTYPE" == darwin* ]] && grep -q 'file-flags' <(rsync --help 2>&1); then
#   _rsync_cmd="${_rsync_cmd} --crtimes --fileflags --protect-decmpfs --force-change"
# fi

# alias rsync-copy="${_rsync_cmd}"
# alias rsync-move="${_rsync_cmd} --remove-source-files"
# alias rsync-update="${_rsync_cmd} --update"
# alias rsync-synchronize="${_rsync_cmd} --update --delete"

# unset _rsync_cmd


# function export
#   if [ $argv ]
#       set var (echo $argv | cut -f1 -d=)
#       set val (echo $argv | cut -f2 -d=)
#       set -g -x $var $val
#   else
#       echo 'export var=value'
#   end
# end


# alias dots="" # a shell alias for editing your shell aliases, yo

# search through entire command history, no quotes necessary.
# function h {
#     history 1 | grep '\$\*'
# }




# http://osxdaily.com/2008/01/17/how-to-spoof-your-mac-address-in-mac-os-x/
# http://osxdaily.com/2010/11/10/random-mac-address-generator/


# open cmatrix and lock screen on user input


# remove files from git tree
# function gitnuke {
#     git filter-branch --index-filter 'git rm --cached --ignore-unmatch $*' -- --all
# }

# # terminal say command with ffmpeg conversion and output built in (generates an mp3)
# say -v "Cellos" -o "voice message.aiff" "i am stuck inside the computer computer. won't you please help me help me help me help me Prashamsa"; ffmpeg -i voice\ message.aiff voice\ message.mp3
