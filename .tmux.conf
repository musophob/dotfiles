# default to better terminal
# set -g default-terminal "screen-256color"
# https://medium.com/@dubistkomisch/how-to-actually-get-italics-and-true-colour-to-work-in-iterm-tmux-vim-9ebe55ebc2be
set -g default-terminal 'tmux-256color'
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'
set -g default-shell $SHELL

# prefix to Control + space
unbind C-b
set -g prefix C-Space
bind Space send-prefix

# decrease default command delay
set -sg escape-time 1

# set window/panes index to start at 1
set -g base-index 1
set-window-option -g pane-base-index 1

# mousing
setw -g mouse on

# allow focus events
set -g focus-events on

# activity monitoring
set-window-option -g monitor-activity on
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-option -g bell-action none

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*.
setw -g aggressive-resize on

# load OS-specific configs
if 'test $(uname) = "Darwin"' 'source-file ~/.tmux.macos.conf'
if 'test $(uname) = "Linux"' 'source-file ~/.tmux.linux.conf'

#
# Key Bindings
#

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf\; display-message "Reloaded!"

# alternate split shortcuts
bind \ split-window -h
bind - split-window -v

# pane resizing
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 6

# Use ESC to enter copy mode
bind Escape copy-mode

# Use vim keybindings in copy mode
setw -g mode-keys vi

# extra bindings for copy mode
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection

# better layout toggling
bind Left select-layout -p
bind Right select-layout -n
bind Up select-layout main-vertical
bind Down select-layout main-horizontal

# Create named window
bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"


#
# Theming
#

set -g pane-active-border-style fg=cyan

set -g status-justify left
set -g status-right '#(tmux-battery)  %A %Y-%m-%d %H:%M '
set -g status-right-length 50

# setw -g window-status-style 'bg=default'
setw -g window-status-current-style bold
setw -g window-status-format ' #I:#W# '
setw -g window-status-current-format ' #I:#W '
setw -g window-status-activity-style noreverse,italics,nobold
setw -g window-status-bell-style noreverse,italics,nobold

# clock
set-window-option -g clock-mode-colour green

#
# vim-tmux navigator
#

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

#
# Use fzf to switch sessions/windows.
#

# Pick a pane in the current session.
# Replaces "Prompt for an index to move the current window." key binding.
bind-key . run "tmux new-window 'bash -c ftpane'"

# Pick a window in any running session.
# Replaces "Prompt for a window index to select." key binding.
bind-key "'" run "tmux new-window 'bash -c fzft'"

#
# Plugins
#

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-open'

#
# Automatic tpm installation
#

if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
